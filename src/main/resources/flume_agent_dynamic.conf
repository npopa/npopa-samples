agent1.channels = kafka-c1 kafka-c2 kafka-c3
agent1.sinks = hbase-k1 hbase-k2 hbase-k3


#Kafka
agent1.channels.kafka-c1.type   = org.apache.flume.channel.kafka.KafkaChannel
agent1.channels.kafka-c1.brokerList=npopa-2.vpc.cloudera.com:9093,npopa-3.vpc.cloudera.com:9093,npopa-4.vpc.cloudera.com:9093
agent1.channels.kafka-c1.topic=agent
agent1.channels.kafka-c1.groupId=flume_agent_group
agent1.channels.kafka-c1.parseAsFlumeEvent = false
agent1.channels.kafka-c1.zookeeperConnect=npopa-2.vpc.cloudera.com:2181/kafka,npopa-3.vpc.cloudera.com:2181/kafka,npopa-4.vpc.cloudera.com:2181/kafka
agent1.channels.kafka-c1.kafka.consumer.ssl.key.password = cloudera
agent1.channels.kafka-c1.kafka.consumer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c1.kafka.consumer.ssl.keystore.password = cloudera
agent1.channels.kafka-c1.kafka.consumer.ssl.protocol = TLS
agent1.channels.kafka-c1.kafka.consumer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c1.kafka.consumer.ssl.truststore.password = cloudera
agent1.channels.kafka-c1.kafka.consumer.ssl.truststore.type = JKS
agent1.channels.kafka-c1.kafka.consumer.security.protocol = SASL_SSL
agent1.channels.kafka-c1.kafka.consumer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c1.kafka.consumer.sasl.kerberos.service.name = kafka
agent1.channels.kafka-c1.kafka.producer.ssl.key.password = cloudera
agent1.channels.kafka-c1.kafka.producer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c1.kafka.producer.ssl.keystore.password = cloudera
agent1.channels.kafka-c1.kafka.producer.ssl.protocol = TLS
agent1.channels.kafka-c1.kafka.producer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c1.kafka.producer.ssl.truststore.password = cloudera
agent1.channels.kafka-c1.kafka.producer.ssl.truststore.type = JKS
agent1.channels.kafka-c1.kafka.producer.security.protocol = SASL_SSL
agent1.channels.kafka-c1.kafka.producer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c1.kafka.producer.sasl.kerberos.service.name = kafka


#Hbase sink
agent1.sinks.hbase-k1.kerberosPrincipal = $KERBEROS_PRINCIPAL
agent1.sinks.hbase-k1.kerberosKeytab = $KERBEROS_KEYTAB
agent1.sinks.hbase-k1.type = org.apache.flume.sink.hbase.HBaseSink
agent1.sinks.hbase-k1.table = agent
agent1.sinks.hbase-k1.columnFamily = J
agent1.sinks.hbase-k1.batchSize=5000
agent1.sinks.hbase-k1.coalesceIncrements=false
agent1.sinks.hbase-k1.serializer = com.sa.npopa.samples.flume.GenericJSONHBaseSerializer
agent1.sinks.hbase-k1.serializer.payloadKey = MD5Prefix2(agent),'|',agent,'|',TS2YYYYMMDDHH(timestamp)
agent1.sinks.hbase-k1.serializer.payloadColumn = timestamp
agent1.sinks.hbase-k1.serializer.incrementKey = MD5Prefix2(agent),'|',TS2YYYYMMDDHH(timestamp)
agent1.sinks.hbase-k1.serializer.incrementColumn = agent
agent1.sinks.hbase-k1.serializer.incrementValue = GetAgentIncrement(status)
agent1.sinks.hbase-k1.serializer.hbaseDryRun = true
agent1.sinks.hbase-k1.serializer.hbaseIncrementsDryRun = true
agent1.sinks.hbase-k1.channel = dummy

#Kafka
agent1.channels.kafka-c2.type   = org.apache.flume.channel.kafka.KafkaChannel
agent1.channels.kafka-c2.brokerList=npopa-2.vpc.cloudera.com:9093,npopa-3.vpc.cloudera.com:9093,npopa-4.vpc.cloudera.com:9093
agent1.channels.kafka-c2.topic=call
agent1.channels.kafka-c2.groupId=flume_call_group
agent1.channels.kafka-c2.parseAsFlumeEvent = false
agent1.channels.kafka-c2.zookeeperConnect=npopa-2.vpc.cloudera.com:2181/kafka,npopa-3.vpc.cloudera.com:2181/kafka,npopa-4.vpc.cloudera.com:2181/kafka
agent1.channels.kafka-c2.kafka.consumer.ssl.key.password = cloudera
agent1.channels.kafka-c2.kafka.consumer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c2.kafka.consumer.ssl.keystore.password = cloudera
agent1.channels.kafka-c2.kafka.consumer.ssl.protocol = TLS
agent1.channels.kafka-c2.kafka.consumer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c2.kafka.consumer.ssl.truststore.password = cloudera
agent1.channels.kafka-c2.kafka.consumer.ssl.truststore.type = JKS
agent1.channels.kafka-c2.kafka.consumer.security.protocol = SASL_SSL
agent1.channels.kafka-c2.kafka.consumer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c2.kafka.consumer.sasl.kerberos.service.name = kafka
agent1.channels.kafka-c2.kafka.producer.ssl.key.password = cloudera
agent1.channels.kafka-c2.kafka.producer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c2.kafka.producer.ssl.keystore.password = cloudera
agent1.channels.kafka-c2.kafka.producer.ssl.protocol = TLS
agent1.channels.kafka-c2.kafka.producer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c2.kafka.producer.ssl.truststore.password = cloudera
agent1.channels.kafka-c2.kafka.producer.ssl.truststore.type = JKS
agent1.channels.kafka-c2.kafka.producer.security.protocol = SASL_SSL
agent1.channels.kafka-c2.kafka.producer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c2.kafka.producer.sasl.kerberos.service.name = kafka


#Hbase sink
agent1.sinks.hbase-k2.kerberosPrincipal = $KERBEROS_PRINCIPAL
agent1.sinks.hbase-k2.kerberosKeytab = $KERBEROS_KEYTAB
agent1.sinks.hbase-k2.type = org.apache.flume.sink.hbase.HBaseSink
agent1.sinks.hbase-k2.table = call
agent1.sinks.hbase-k2.columnFamily = J
agent1.sinks.hbase-k2.batchSize=5000
agent1.sinks.hbase-k2.coalesceIncrements=false
agent1.sinks.hbase-k2.serializer.payloadColumn = timestamp
agent1.sinks.hbase-k2.serializer.payloadKey = id
agent1.sinks.hbase-k2.serializer.incrementKey = Prefix2(id),'|',TS2YYYYMMDDHH(timestamp)
agent1.sinks.hbase-k2.serializer.incrementColumn = id
agent1.sinks.hbase-k2.serializer.incrementValue = GetCallIncrement(type)
agent1.sinks.hbase-k2.serializer.hbaseDryRun = true
agent1.sinks.hbase-k2.serializer.hbaseIncrementsDryRun = true
agent1.sinks.hbase-k2.serializer = com.sa.npopa.samples.flume.GenericJSONHBaseSerializer
agent1.sinks.hbase-k2.channel = dummy


#Kafka
agent1.channels.kafka-c3.type   = org.apache.flume.channel.kafka.KafkaChannel
agent1.channels.kafka-c3.brokerList=npopa-2.vpc.cloudera.com:9093,npopa-3.vpc.cloudera.com:9093,npopa-4.vpc.cloudera.com:9093
agent1.channels.kafka-c3.topic=call
agent1.channels.kafka-c3.groupId=flume_call_audit_group
agent1.channels.kafka-c3.parseAsFlumeEvent = false
agent1.channels.kafka-c3.zookeeperConnect=npopa-2.vpc.cloudera.com:2181/kafka,npopa-3.vpc.cloudera.com:2181/kafka,npopa-4.vpc.cloudera.com:2181/kafka
agent1.channels.kafka-c3.kafka.consumer.max.poll.records = 10
#agent1.channels.kafka-c3.kafka.consumer.session.timeout.ms = 60000
#agent1.channels.kafka-c3.kafka.consumer.request.timeout.ms = 70000
agent1.channels.kafka-c3.kafka.consumer.ssl.key.password = cloudera
agent1.channels.kafka-c3.kafka.consumer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c3.kafka.consumer.ssl.keystore.password = cloudera
agent1.channels.kafka-c3.kafka.consumer.ssl.protocol = TLS
agent1.channels.kafka-c3.kafka.consumer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c3.kafka.consumer.ssl.truststore.password = cloudera
agent1.channels.kafka-c3.kafka.consumer.ssl.truststore.type = JKS
agent1.channels.kafka-c3.kafka.consumer.security.protocol = SASL_SSL
agent1.channels.kafka-c3.kafka.consumer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c3.kafka.consumer.sasl.kerberos.service.name = kafka
agent1.channels.kafka-c3.kafka.producer.ssl.key.password = cloudera
agent1.channels.kafka-c3.kafka.producer.ssl.keystore.location = /opt/cloudera/security/jks/keystore.jks
agent1.channels.kafka-c3.kafka.producer.ssl.keystore.password = cloudera
agent1.channels.kafka-c3.kafka.producer.ssl.protocol = TLS
agent1.channels.kafka-c3.kafka.producer.ssl.truststore.location = /opt/cloudera/security/jks/truststore.jks
agent1.channels.kafka-c3.kafka.producer.ssl.truststore.password = cloudera
agent1.channels.kafka-c3.kafka.producer.ssl.truststore.type = JKS
agent1.channels.kafka-c3.kafka.producer.security.protocol = SASL_SSL
agent1.channels.kafka-c3.kafka.producer.sasl.mechanism = GSSAPI
agent1.channels.kafka-c3.kafka.producer.sasl.kerberos.service.name = kafka


#Hbase sink
agent1.sinks.hbase-k3.kerberosPrincipal = $KERBEROS_PRINCIPAL
agent1.sinks.hbase-k3.kerberosKeytab = $KERBEROS_KEYTAB
agent1.sinks.hbase-k3.type = org.apache.flume.sink.hbase.HBaseSink
agent1.sinks.hbase-k3.table = call
agent1.sinks.hbase-k3.columnFamily = J
agent1.sinks.hbase-k3.batchSize=100
agent1.sinks.hbase-k3.coalesceIncrements=false
agent1.sinks.hbase-k3.serializer.kerberosPrincipal = $KERBEROS_PRINCIPAL
agent1.sinks.hbase-k3.serializer.kerberosKeytab = $KERBEROS_KEYTAB
agent1.sinks.hbase-k3.serializer.columnFamily = J
agent1.sinks.hbase-k3.serializer.payloadColumn = timestamp
agent1.sinks.hbase-k3.serializer.payloadKey = id
agent1.sinks.hbase-k3.serializer.incrementKey = Prefix2(id),'|',TS2YYYYMMDDHH(timestamp)
agent1.sinks.hbase-k3.serializer.incrementColumn = id
agent1.sinks.hbase-k3.serializer.incrementValue = '72057594037927936'
agent1.sinks.hbase-k3.serializer.metric.table=call
agent1.sinks.hbase-k3.serializer.metric.columnFamily = M
agent1.sinks.hbase-k3.serializer.metric.column = 'M'
agent1.sinks.hbase-k3.serializer.metric.key = id
agent1.sinks.hbase-k3.serializer = com.sa.npopa.samples.flume.GenericJSONMetricHBaseSerializer
agent1.sinks.hbase-k3.channel = dummy



###kafka (channel) -> hbase
agent1.sinks.hbase-k1.channel=kafka-c1
agent1.sinks.hbase-k2.channel=kafka-c2
#agent1.sinks.hbase-k3.channel=kafka-c3